{"version":3,"sources":["horizontal-loop-test.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AACzB,IAAI,YAAY,mQASf,CAAC;;AAEF,QAAQ,CAAC,gBAAgB,EAAE,YAAM;AAC/B,MAAI,GAAG,YAAA;MAAE,MAAM,YAAA,CAAC;;AAEhB,YAAU,CAAC,YAAM;AACf,KAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AAC/B,OAAG,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC;AACnB,UAAM,GAAG;AACP,SAAG,EAAE,GAAG;AACR,eAAS,EAAE,GAAG,CAAC,QAAQ,EAAE;AACzB,0BAAoB,EAAE;eAAM,CAAC;OAAA;KAC9B,CAAA;GACF,CAAC,CAAC;;AAEH,WAAS,CAAC,YAAM;AACd,KAAC,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC;GAC/B,CAAC,CAAC;;AAEH,UAAQ,CAAC,gBAAgB,EAAE,YAAM;AAC/B,MAAE,CAAC,+CAA+C,EAAE,YAAM;AACxD,UAAI,EAAE,GAAG,IAAI,cAAc,CAAC,MAAM,EAAE;AAClC,sBAAc,EAAE,SAAS;OAC1B,CAAC,CAAC;;AAEH,QAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;;AAEpB,YAAM,CAAC,GAAG,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACjD,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,eAAe,EAAE,YAAM;AAC9B,MAAE,CAAC,8CAA8C,EAAE,YAAM;AACvD,UAAI,EAAE,GAAG,IAAI,cAAc,CAAC,MAAM,EAAE;AAClC,sBAAc,EAAE,SAAS;OAC1B,CAAC,CAAC;;AAEH,QAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;;AAEnB,YAAM,CAAC,GAAG,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACjD,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC","file":"horizontal-loop-test.js","sourcesContent":["let expect = chai.expect;\nlet sliderMarkup = `\n<div class=\"slider-wrapper\">\n  <div class=\"slider\" data-bxslider-mode=\"horizontal\">\n    <div class=\"slide\">slide1</div>\n    <div class=\"slide\">slide2</div>\n    <div class=\"slide\">slide3</div>\n    <div class=\"slide\">slide4</div>\n  </div>\n</div>\n`;\n\ndescribe('HorizontalLoop', () => {\n  let $el, slider;\n\n  beforeEach(() => {\n    $('body').append(sliderMarkup);\n    $el = $('.slider');\n    slider = {\n      $el: $el,\n      $children: $el.children(),\n      getVisibleSlideCount: () => 3\n    }\n  });\n\n  afterEach(() => {\n    $('.slider-wrapper').remove();\n  });\n\n  describe('#prependClones', () => {\n    it('prepends the supplied number of cloned slides', () => {\n      let hl = new HorizontalLoop(slider, {\n        cloneClassName: 'foo-bar'\n      });\n\n      hl.prependClones(3);\n\n      expect($el.find(`.foo-bar`).length).to.equal(3);\n    });\n  });\n\n  describe('#appendClones', () => {\n    it('appends the supplied number of cloned slides', () => {\n      let hl = new HorizontalLoop(slider, {\n        cloneClassName: 'foo-bar'\n      });\n\n      hl.appendClones(3);\n\n      expect($el.find(`.foo-bar`).length).to.equal(3);\n    });\n  });\n});\n"],"sourceRoot":"/source/"}